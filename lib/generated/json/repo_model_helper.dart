import 'package:github_flutter/models/repo_model.dart';
import 'package:github_flutter/generated/json/base/json_filed.dart';
import 'package:github_flutter/models/user_model.dart';

repoModelFromJson(RepoModel data, Map<String, dynamic> json) {
  data.id = json['id'];
  data.nodeId = json['node_id'];
  data.name = json['name'];
  data.fullName = json['full_name'];
  data.private = json['private'];
  data.owner =
      json['owner'] != null ? new UserModel().fromJson(json['owner']) : null;
  data.htmlUrl = json['html_url'];
  data.description = json['description'];
  data.fork = json['fork'];
  data.url = json['url'];
  data.forksUrl = json['forks_url'];
  data.keysUrl = json['keys_url'];
  data.collaboratorsUrl = json['collaborators_url'];
  data.teamsUrl = json['teams_url'];
  data.hooksUrl = json['hooks_url'];
  data.issueEventsUrl = json['issue_events_url'];
  data.eventsUrl = json['events_url'];
  data.assigneesUrl = json['assignees_url'];
  data.branchesUrl = json['branches_url'];
  data.tagsUrl = json['tags_url'];
  data.blobsUrl = json['blobs_url'];
  data.gitTagsUrl = json['git_tags_url'];
  data.gitRefsUrl = json['git_refs_url'];
  data.treesUrl = json['trees_url'];
  data.statusesUrl = json['statuses_url'];
  data.languagesUrl = json['languages_url'];
  data.stargazersUrl = json['stargazers_url'];
  data.contributorsUrl = json['contributors_url'];
  data.subscribersUrl = json['subscribers_url'];
  data.subscriptionUrl = json['subscription_url'];
  data.commitsUrl = json['commits_url'];
  data.gitCommitsUrl = json['git_commits_url'];
  data.commentsUrl = json['comments_url'];
  data.issueCommentUrl = json['issue_comment_url'];
  data.contentsUrl = json['contents_url'];
  data.compareUrl = json['compare_url'];
  data.mergesUrl = json['merges_url'];
  data.archiveUrl = json['archive_url'];
  data.downloadsUrl = json['downloads_url'];
  data.issuesUrl = json['issues_url'];
  data.pullsUrl = json['pulls_url'];
  data.milestonesUrl = json['milestones_url'];
  data.notificationsUrl = json['notifications_url'];
  data.labelsUrl = json['labels_url'];
  data.releasesUrl = json['releases_url'];
  data.deploymentsUrl = json['deployments_url'];
  data.createdAt = json['created_at'];
  data.updatedAt = json['updated_at'];
  data.pushedAt = json['pushed_at'];
  data.gitUrl = json['git_url'];
  data.sshUrl = json['ssh_url'];
  data.cloneUrl = json['clone_url'];
  data.svnUrl = json['svn_url'];
  data.homepage = json['homepage'];
  data.size = json['size'];
  data.stargazersCount = json['stargazers_count'];
  data.watchersCount = json['watchers_count'];
  data.language = json['language'];
  data.hasIssues = json['has_issues'];
  data.hasProjects = json['has_projects'];
  data.hasDownloads = json['has_downloads'];
  data.hasWiki = json['has_wiki'];
  data.hasPages = json['has_pages'];
  data.forksCount = json['forks_count'];
  data.mirrorUrl = json['mirror_url'];
  data.archived = json['archived'];
  data.disabled = json['disabled'];
  data.openIssuesCount = json['open_issues_count'];
  data.license = json['license'];
  data.forks = json['forks'];
  data.openIssues = json['open_issues'];
  data.watchers = json['watchers'];
  data.defaultBranch = json['default_branch'];
  data.tempCloneToken = json['temp_clone_token'];
  data.networkCount = json['network_count'];
  data.subscribersCount = json['subscribers_count'];
  return data;
}

Map<String, dynamic> repoModelToJson(RepoModel entity) {
  final Map<String, dynamic> data = new Map<String, dynamic>();
  data['id'] = entity.id;
  data['node_id'] = entity.nodeId;
  data['name'] = entity.name;
  data['full_name'] = entity.fullName;
  data['private'] = entity.private;
  if (entity.owner != null) {
    data['owner'] = UserModel().toJson();
  }
  data['html_url'] = entity.htmlUrl;
  data['description'] = entity.description;
  data['fork'] = entity.fork;
  data['url'] = entity.url;
  data['forks_url'] = entity.forksUrl;
  data['keys_url'] = entity.keysUrl;
  data['collaborators_url'] = entity.collaboratorsUrl;
  data['teams_url'] = entity.teamsUrl;
  data['hooks_url'] = entity.hooksUrl;
  data['issue_events_url'] = entity.issueEventsUrl;
  data['events_url'] = entity.eventsUrl;
  data['assignees_url'] = entity.assigneesUrl;
  data['branches_url'] = entity.branchesUrl;
  data['tags_url'] = entity.tagsUrl;
  data['blobs_url'] = entity.blobsUrl;
  data['git_tags_url'] = entity.gitTagsUrl;
  data['git_refs_url'] = entity.gitRefsUrl;
  data['trees_url'] = entity.treesUrl;
  data['statuses_url'] = entity.statusesUrl;
  data['languages_url'] = entity.languagesUrl;
  data['stargazers_url'] = entity.stargazersUrl;
  data['contributors_url'] = entity.contributorsUrl;
  data['subscribers_url'] = entity.subscribersUrl;
  data['subscription_url'] = entity.subscriptionUrl;
  data['commits_url'] = entity.commitsUrl;
  data['git_commits_url'] = entity.gitCommitsUrl;
  data['comments_url'] = entity.commentsUrl;
  data['issue_comment_url'] = entity.issueCommentUrl;
  data['contents_url'] = entity.contentsUrl;
  data['compare_url'] = entity.compareUrl;
  data['merges_url'] = entity.mergesUrl;
  data['archive_url'] = entity.archiveUrl;
  data['downloads_url'] = entity.downloadsUrl;
  data['issues_url'] = entity.issuesUrl;
  data['pulls_url'] = entity.pullsUrl;
  data['milestones_url'] = entity.milestonesUrl;
  data['notifications_url'] = entity.notificationsUrl;
  data['labels_url'] = entity.labelsUrl;
  data['releases_url'] = entity.releasesUrl;
  data['deployments_url'] = entity.deploymentsUrl;
  data['created_at'] = entity.createdAt;
  data['updated_at'] = entity.updatedAt;
  data['pushed_at'] = entity.pushedAt;
  data['git_url'] = entity.gitUrl;
  data['ssh_url'] = entity.sshUrl;
  data['clone_url'] = entity.cloneUrl;
  data['svn_url'] = entity.svnUrl;
  data['homepage'] = entity.homepage;
  data['size'] = entity.size;
  data['stargazers_count'] = entity.stargazersCount;
  data['watchers_count'] = entity.watchersCount;
  data['language'] = entity.language;
  data['has_issues'] = entity.hasIssues;
  data['has_projects'] = entity.hasProjects;
  data['has_downloads'] = entity.hasDownloads;
  data['has_wiki'] = entity.hasWiki;
  data['has_pages'] = entity.hasPages;
  data['forks_count'] = entity.forksCount;
  data['mirror_url'] = entity.mirrorUrl;
  data['archived'] = entity.archived;
  data['disabled'] = entity.disabled;
  data['open_issues_count'] = entity.openIssuesCount;
  data['license'] = entity.license;
  data['forks'] = entity.forks;
  data['open_issues'] = entity.openIssues;
  data['watchers'] = entity.watchers;
  data['default_branch'] = entity.defaultBranch;
  data['temp_clone_token'] = entity.tempCloneToken;
  data['network_count'] = entity.networkCount;
  data['subscribers_count'] = entity.subscribersCount;
  return data;
}
